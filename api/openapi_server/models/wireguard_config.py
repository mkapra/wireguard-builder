# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
import re
from openapi_server import util

import re  # noqa: E501

class WireguardConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configruation=None):  # noqa: E501
        """WireguardConfig - a model defined in OpenAPI

        :param configruation: The configruation of this WireguardConfig.  # noqa: E501
        :type configruation: str
        """
        self.openapi_types = {
            'configruation': str
        }

        self.attribute_map = {
            'configruation': 'configruation'
        }

        self._configruation = configruation

    @classmethod
    def from_dict(cls, dikt) -> 'WireguardConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WireguardConfig of this WireguardConfig.  # noqa: E501
        :rtype: WireguardConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configruation(self):
        """Gets the configruation of this WireguardConfig.


        :return: The configruation of this WireguardConfig.
        :rtype: str
        """
        return self._configruation

    @configruation.setter
    def configruation(self, configruation):
        """Sets the configruation of this WireguardConfig.


        :param configruation: The configruation of this WireguardConfig.
        :type configruation: str
        """
        if configruation is not None and len(configruation) > 5000:
            raise ValueError("Invalid value for `configruation`, length must be less than or equal to `5000`")  # noqa: E501
        if configruation is not None and not re.search(r'^[a-zA-Z0-9_\-\\\\/\*\s\=\.\.]*$', configruation):  # noqa: E501
            raise ValueError("Invalid value for `configruation`, must be a follow pattern or equal to `/^[a-zA-Z0-9_\-\\\\/\*\s\=\.\.]*$/`")  # noqa: E501

        self._configruation = configruation
